/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

package Autoclean_Form;

/**
 *
 * @author Fadhil
 */


import AutoClean_Code.AdminAction;
import static AutoClean_Code.AdminAction.showMessage;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.Statement;
import javax.swing.table.DefaultTableModel;
import java.sql.PreparedStatement;



public class AdminDashboard extends javax.swing.JFrame implements AdminAction{

    /**
     * Creates new form AdminDashboard
     */
    public AdminDashboard() {
        initComponents();
        setResizable(false);
        setLocationRelativeTo(null);
        setTitle("Admin AutoClean JavaDesk");
        AdminAction.super.refreshTable(tabelHistory);    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        btnEdit = new javax.swing.JButton();
        btnHapus = new javax.swing.JButton();
        btnCuci = new javax.swing.JButton();
        btnBatal = new javax.swing.JButton();
        btnKeluar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabelHistory = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(204, 255, 255));

        jPanel2.setBackground(new java.awt.Color(153, 204, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153), 3));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/AutoClean-Assets/logo.png"))); // NOI18N

        jLabel1.setFont(new java.awt.Font("SansSerif", 1, 18)); // NOI18N
        jLabel1.setText("AUTOCLEAN JAVADESK");

        jLabel3.setFont(new java.awt.Font("SansSerif", 1, 24)); // NOI18N
        jLabel3.setText("ADMIN DASHBOARD");

        btnEdit.setText("Edit");
        btnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditActionPerformed(evt);
            }
        });

        btnHapus.setText("Hapus");
        btnHapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHapusActionPerformed(evt);
            }
        });

        btnCuci.setText("Cuci");
        btnCuci.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCuciActionPerformed(evt);
            }
        });

        btnBatal.setText("Batalkan");
        btnBatal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBatalActionPerformed(evt);
            }
        });

        btnKeluar.setText("Keluar");
        btnKeluar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnKeluarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(91, 91, 91)
                        .addComponent(jLabel2))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(btnBatal, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnCuci, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnHapus, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel1)
                                    .addComponent(btnKeluar, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1)
                .addGap(44, 44, 44)
                .addComponent(btnEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnHapus, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnCuci, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnBatal, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnKeluar, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        tabelHistory.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        tabelHistory.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        tabelHistory.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "No", "Nama", "No Telp", "Tipe Kendaraan", "Merk Kendaraan", "Plat Kendaraan", "Opsi Pencucian", "Jadwal Cuci", "Status"
            }
        ));
        tabelHistory.getTableHeader().setReorderingAllowed(false);
        tabelHistory.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                tabelHistoryAncestorAdded(evt);
            }
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        jScrollPane1.setViewportView(tabelHistory);
        if (tabelHistory.getColumnModel().getColumnCount() > 0) {
            tabelHistory.getColumnModel().getColumn(0).setResizable(false);
            tabelHistory.getColumnModel().getColumn(0).setPreferredWidth(10);
            tabelHistory.getColumnModel().getColumn(1).setResizable(false);
            tabelHistory.getColumnModel().getColumn(2).setResizable(false);
            tabelHistory.getColumnModel().getColumn(3).setResizable(false);
            tabelHistory.getColumnModel().getColumn(4).setResizable(false);
            tabelHistory.getColumnModel().getColumn(5).setResizable(false);
            tabelHistory.getColumnModel().getColumn(6).setResizable(false);
            tabelHistory.getColumnModel().getColumn(7).setResizable(false);
            tabelHistory.getColumnModel().getColumn(8).setResizable(false);
        }

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 52, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 846, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 535, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(32, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1146, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 601, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tabelHistoryAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_tabelHistoryAncestorAdded
        // TODO add your handling code here:
        
        AdminAction.super.refreshTable(tabelHistory);

        try {
        Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/autoclean_javadesk", "root", "");
        Statement stmt = conn.createStatement();

        // Ambil semua data pelanggan
        String sql = "SELECT * FROM pelanggan";

        ResultSet rs = stmt.executeQuery(sql);

        DefaultTableModel model = (DefaultTableModel) tabelHistory.getModel();
        model.setRowCount(0);

        int no = 1;
        while (rs.next()) {
            Object[] row = {
                no++,
                rs.getString("username"), // ini buat kolom "Nama"
                rs.getString("no_telp"),
                rs.getString("tipe_kendaraan"),
                rs.getString("merk_kendaraan"),
                rs.getString("plat_kendaraan"),
                rs.getString("opsi_pencucian"),
                rs.getString("jadwal_cuci"),
                rs.getString("status")
            };
            model.addRow(row);
        }

        rs.close();
        stmt.close();
        conn.close();
    } catch (Exception e) {
        System.out.println("Error : " + e.getMessage());
    }

    }//GEN-LAST:event_tabelHistoryAncestorAdded

    private void btnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditActionPerformed
        // TODO add your handling code here:
    int row = tabelHistory.getSelectedRow();
    if (row != -1) {
        String noTelp = tabelHistory.getValueAt(row, 2).toString();
        String currentStatus = tabelHistory.getValueAt(row, 8).toString();

        if (currentStatus.equals("Selesai") || currentStatus.equals("Dibatalkan")) {
            showMessage("Booking sudah selesai atau dibatalkan, tidak bisa diedit!");
        } else {
            editBooking(noTelp);
        }
    } else {
        showMessage("Pilih booking dulu!");
    }
    }//GEN-LAST:event_btnEditActionPerformed

    private void btnHapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHapusActionPerformed
        // TODO add your handling code here:
    int row = tabelHistory.getSelectedRow();
    if (row != -1) {
        String noTelp = tabelHistory.getValueAt(row, 2).toString();
        String currentStatus = tabelHistory.getValueAt(row, 8).toString();

        if (!currentStatus.equals("Dibatalkan")) {
            showMessage("Booking hanya bisa dihapus jika sudah dibatalkan!");
        } else {
            deleteBooking(noTelp);
        }
    } else {
        showMessage("Pilih booking dulu!");
    }
    }//GEN-LAST:event_btnHapusActionPerformed

    private void btnCuciActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCuciActionPerformed
        // TODO add your handling code here:
    int row = tabelHistory.getSelectedRow();
    if (row != -1) {
        String noTelp = tabelHistory.getValueAt(row, 2).toString();
        String currentStatus = tabelHistory.getValueAt(row, 8).toString();

        if (currentStatus.equals("Belum dibayar")) {
            showMessage("Booking belum dibayar, tidak bisa dicuci!");
        } else if (currentStatus.equals("Selesai") || currentStatus.equals("Dibatalkan")) {
            showMessage("Booking sudah selesai atau dibatalkan, tidak bisa dicuci lagi!");
        } else {
            updateStatus(noTelp, "Selesai");
        }
    } else {
        showMessage("Pilih booking dulu!");
    }

        
    }//GEN-LAST:event_btnCuciActionPerformed

    private void btnBatalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBatalActionPerformed
    int row = tabelHistory.getSelectedRow();
        if (row != -1) {
            String noTelp = tabelHistory.getValueAt(row, 2).toString();
            String currentStatus = tabelHistory.getValueAt(row, 8).toString();

            if (currentStatus.equals("Selesai")) {
                showMessage("Booking sudah selesai, tidak bisa dibatalkan!");
            } else if (currentStatus.equals("Dibatalkan")) {
                showMessage("Booking sudah dibatalkan!");
            } else {
                updateStatus(noTelp, "Dibatalkan");
            }
        } else {
            showMessage("Pilih booking dulu!");
        }

    }//GEN-LAST:event_btnBatalActionPerformed

    private void btnKeluarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnKeluarActionPerformed
        // TODO add your handling code here:
            this.dispose(); // nutup AdminDashboard
    new Login().setVisible(true); 
    }//GEN-LAST:event_btnKeluarActionPerformed

    
    @Override
    public void editBooking(String noTelp) {
        // Misal: update jadwal cuci
    try {
        Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/autoclean_javadesk", "root", "");

        // ambil data sekarang dulu (biar bisa kasih default value buat inputan)
        String sqlSelect = "SELECT jadwal_cuci, opsi_pencucian FROM pelanggan WHERE no_telp = ?";
        PreparedStatement psSelect = conn.prepareStatement(sqlSelect);
        psSelect.setString(1, noTelp);
        ResultSet rs = psSelect.executeQuery();

        String currentJadwal = "";
        String currentOpsi = "";

        if (rs.next()) {
            currentJadwal = rs.getString("jadwal_cuci");
            currentOpsi = rs.getString("opsi_pencucian");
        }
        rs.close();
        psSelect.close();

        // Input baru (pakai dialog input)
        String newJadwal = javax.swing.JOptionPane.showInputDialog(this, "Masukkan jadwal baru:", currentJadwal);
        String newOpsi = javax.swing.JOptionPane.showInputDialog(this, "Masukkan opsi baru:", currentOpsi);

        if (newJadwal == null || newOpsi == null || newJadwal.trim().isEmpty() || newOpsi.trim().isEmpty()) {
            showMessage("Edit dibatalkan atau input tidak valid!");
        } else {
            String sqlUpdate = "UPDATE pelanggan SET jadwal_cuci = ?, opsi_pencucian = ? WHERE no_telp = ?";
            PreparedStatement psUpdate = conn.prepareStatement(sqlUpdate);
            psUpdate.setString(1, newJadwal);
            psUpdate.setString(2, newOpsi);
            psUpdate.setString(3, noTelp);
            psUpdate.executeUpdate();
            psUpdate.close();

            showMessage("Jadwal & opsi berhasil diupdate!");
            AdminAction.super.refreshTable(tabelHistory);
        }

        conn.close();

    } catch (Exception e) {
        showMessage("Error edit: " + e.getMessage());
    }
    }

    @Override
    public void deleteBooking(String noTelp) {
        try {
            Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/autoclean_javadesk", "root", "");
            String sql = "DELETE FROM pelanggan WHERE no_telp = ?";
            PreparedStatement ps = (PreparedStatement) conn.prepareStatement(sql);
            ps.setString(1, noTelp);
            ps.executeUpdate();
            conn.close();
            showMessage("Booking berhasil dihapus!");
            AdminAction.super.refreshTable(tabelHistory);
        } catch (Exception e) {
            showMessage("Error hapus: " + e.getMessage());
        }
    }

    @Override
    public void updateStatus(String noTelp, String status) {
        try {
            Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/autoclean_javadesk", "root", "");
            String sql = "UPDATE pelanggan SET status = ? WHERE no_telp = ?";
            PreparedStatement ps = (PreparedStatement) conn.prepareStatement(sql);
            ps.setString(1, status);
            ps.setString(2, noTelp);
            ps.executeUpdate();
            conn.close();
            showMessage("Status berhasil diupdate!");
            AdminAction.super.refreshTable(tabelHistory);
        } catch (Exception e) {
            showMessage("Error update status: " + e.getMessage());
        }
    }
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AdminDashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AdminDashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AdminDashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AdminDashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AdminDashboard().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBatal;
    private javax.swing.JButton btnCuci;
    private javax.swing.JButton btnEdit;
    private javax.swing.JButton btnHapus;
    private javax.swing.JButton btnKeluar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tabelHistory;
    // End of variables declaration//GEN-END:variables
}
